https://www.interviewbit.com/problems/matrix-median/

TC: O(log 2 (2^32)) * N * log(M)  where N is the number of rows and M is the number of columns
=> 32 * N * log(M)

int findElementsLessThanEqualTo(vector<int> &row, int mid){
    int l = 0, h = row.size()-1;
    
    while(l <= h){
        int m = (l + h) >> 1;
        if(row[m] <= mid) l = m + 1;
        else h = m - 1;
    }
    return l; 
}

int Solution::findMedian(vector<vector<int> > &A) {
    int n = A.size();
    int m = A[0].size();
    int low = 1;
    int high = 1e9;
    
    while(low <= high){
        int mid = (low + high) >> 1;
        
        //cnt element ehich are <= mid;
        int cnt = 0;
        for(int i = 0; i < n; i++){
            cnt += findElementsLessThanEqualTo(A[i],mid);
        }
        if(cnt <= (n * m) / 2) low = mid + 1;
        else high = mid - 1;
    }
    return low;
}
