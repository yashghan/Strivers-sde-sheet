TC: N * O(log(M * 10^D)) where M is the number of decimal places tht you can have from 1 to M

double multiply(double mid, int n){
    double ans = 1.0;
    for(int i = 1; i <= n; i++){
        ans = ans * mid;
    }
    return ans;
}

double findNthRootOfM(int n, int m) {
    double low = 1;
    double high = m;
    double eps = 1e-8;
    
    while((high - low) > eps){
        double mid = (low + high) / 2.0;
        if(multiply(mid, n) < m){
            low = mid;
        }
        else{
            high = mid;
        }
    }
    return high;
}

// int main(){
//     int n, m; cin >> n >> m;
//     findNthRootOfM(n,m);
//     return 0;
// }
